asyncapi: 2.6.0
info:
  title: Chefswap Messaging
  version: 1.0.0
  description: Messaging websocket api for chefswap
servers:
  development:
    url: ws://localhost:3001
    protocol: ws
    description: Development server
channels:
  /:
    publish:
      summary: Send message related data to the server
      message:
        oneOf:
          - $ref: "#/components/messages/SendMessage"
          - $ref: "#/components/messages/GetMessages"
          - $ref: "#/components/messages/GetConversations"
    subscribe:
      summary: Listen for message related data from the server
      message:
        oneOf:
          - $ref: "#/components/messages/ReceiveMessage"
components:
  messages:
    SendMessage:
      name: sendMessage
      contentType: application/json
      payload:
        type: object
        required:
          - conversationUid
          - content
        properties:
          receiverUid:
            type: string
            format: uuid
          content:
            $ref: "#/components/schemas/messageContent"
      x-ack:
        args:
          oneOf:
            - $ref: "#/components/schemas/messagePayload"
            - $ref: "#/components/schemas/errorPayload"
    GetMessages:
      name: getMessages
      summary: Get past messages in a conversation. Use timestampKey and limit for pagination.
      contentType: application/json
      payload:
        type: object
        required:
          - conversationUid
          - timestampKey
          - limit
        properties:
          conversationUid:
            type: string
            format: uuid
          timestampKey:
            type: string
            format: date-time
          limit:
            type: number
            format: integer
            minimum: 1
      x-ack:
        args:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/messagePayload"
              - $ref: "#/components/schemas/errorPayload"
    GetConversations:
      name: getConversations
      summary: Get all current conversations of signed in account
      contentType: application/json
      x-ack:
        args:
          type: array
          items:
            - $ref: "#/components/schemas/conversation"
    ReceiveMessage:
      name: receiveUserMessage
      contentType: application/json
      payload:
        $ref: "#/components/schemas/messagePayload"
  schemas:
    messagePayload:
      required:
        - messageUid
        - conversationUid
        - content
        - timestamp
      properties:
        messageUid:
          type: string
          format: uuid
        conversationUid:
          type: string
          format: uuid
        receiverUid:
          type: string
          format: uuid
        content:
          $ref: "#/components/schemas/messageContent"
        timestamp:
          type: string
          format: date-time
    conversation:
      required:
        - conversationUid
        - account1Uid
        - account2Uid
      properties:
        conversationUid:
          type: string
          format: uuid
        account1Uid:
          type: string
          format: uuid
        account2Uid:
          type: string
          format: uuid
    messageContent:
      type: string
      maxLength: 300
    errorPayload:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - event
              - message
              - detail
            properties:
              code:
                type: string
              event:
                type: string
              message:
                type: string
              detail:
                type: string
