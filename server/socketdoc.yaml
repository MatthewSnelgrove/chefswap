asyncapi: 2.6.0
info:
  title: Chefswap Messaging
  version: 1.0.0
  description: Messaging websocket api for chefswap
servers:
  development:
    url: ws://localhost:3001
    protocol: ws
    description: Development server
channels:
  /:
    publish:
      summary: Send message related data to the server
      message:
        oneOf:
          - $ref: "#/components/messages/SendUserMessage"
          - $ref: "#/components/messages/GetMessages"
          - $ref: "#/components/messages/GetConversations"
    subscribe:
      summary: Listen for message related data from the server
      message:
        oneOf:
          - $ref: "#/components/messages/ReceiveUserMessage"
          - $ref: "#/components/messages/ReceiveSystemMessage"
components:
  messages:
    SendUserMessage:
      name: sendUserMessage
      contentType: application/json
      payload:
        type: object
        required:
          - receiverUid
          - content
        properties:
          receiverUid:
            type: string
            format: uuid
          content:
            $ref: "#/components/schemas/messageContent"
      x-ack:
        args:
          $ref: "#/components/schemas/userMessagePayload"
    GetMessages:
      name: getMessages
      summary: Get past messages between account with uid messagerUid. Use timestampKey and limit for pagination.
      contentType: application/json
      payload:
        type: object
        required:
          - messagerUid
          - timestampKey
          - limit
        properties:
          messagerUid:
            type: string
            format: uuid
          timestampKey:
            type: string
            format: date-time
          limit:
            type: number
            format: integer
            minimum: 1
      x-ack:
        args:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/userMessagePayload"
              - $ref: "#/components/schemas/systemMessagePayload"
    GetConversations:
      name: getConversationss
      summary: Get all current conversations of signed in account
      contentType: application/json
      x-ack:
        args:
          type: array
          items:
            - $ref: "#/components/schemas/conversation"
    ReceiveUserMessage:
      name: receiveUserMessage
      contentType: application/json
      payload:
        $ref: "#/components/schemas/userMessagePayload"
    ReceiveSystemMessage:
      name: receiveSystemMessage
      contentType: application/json
      payload:
        $ref: "#/components/schemas/systemMessagePayload"
  schemas:
    userMessagePayload:
      required:
        - messageUid
        - senderUid
        - receiverUid
        - content
        - timestamp
      properties:
        messageUid:
          type: string
          format: uuid
        senderUid:
          type: string
          format: uuid
        receiverUid:
          type: string
          format: uuid
        content:
          $ref: "#/components/schemas/messageContent"
        timestamp:
          type: string
          format: date-time
    systemMessagePayload:
      required:
        - messageUid
        - account1Uid
        - account2Uid
        - content
        - timestamp
      properties:
        messageUid:
          type: string
          format: uuid
        account1Uid:
          type: string
          format: uuid
        account2Uid:
          type: string
          format: uuid
        content:
          $ref: "#/components/schemas/messageContent"
        timestamp:
          type: string
          format: date-time
    conversation:
      required:
        - conversationUid
        - account1Uid
        - account2Uid
        - lastMessageUid
      properties:
        conversationUid:
          type: string
          format: uuid
        account1Uid:
          type: string
          format: uuid
        account2Uid:
          type: string
          format: uuid
        lastMessageUid:
          type: string
          format: uuid
    messageContent:
      type: string
      maxLength: 300
