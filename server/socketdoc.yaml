asyncapi: 2.6.0
info:
  title: Chefswap Messaging
  version: 1.0.0
  description: Messaging websocket api for chefswap
servers:
  development:
    url: ws://localhost:3001
    protocol: ws
    description: Development server
channels:
  /:
    publish:
      summary: Send message related data to the server. Use the x-ack property to listen for a response.
      message:
        oneOf:
          - $ref: "#/components/messages/SendGroupMessage"
          - $ref: "#/components/messages/SendDmMessage"
          - $ref: "#/components/messages/GetGroupMessages"
          - $ref: "#/components/messages/GetDmMessages"
          - $ref: "#/components/messages/CreateGroup"
          # - $ref: "#/components/messages/AddToGroup"
          - $ref: "#/components/messages/LeaveGroup"
          - $ref: "#/components/messages/DeactivateConversation"
          - $ref: "#/components/messages/GetConversations"
    subscribe:
      summary: Listen for message related data from the server
      message:
        oneOf:
          - $ref: "#/components/messages/ReceiveMessage"
components:
  messages:
    SendGroupMessage:
      name: sendGroupMessage
      contentType: application/json
      payload:
        $ref: "#/components/schemas/groupMessagePayload"
      x-ack:
        args:
          oneOf:
            - $ref: "#/components/schemas/groupMessagePayload"
            - $ref: "#/components/schemas/errorPayload"
    SendDmMessage:
      name: sendDmMessage
      contentType: application/json
      payload:
        $ref: "#/components/schemas/dmMessagePayload"
      x-ack:
        args:
          oneOf:
            - $ref: "#/components/schemas/dmMessagePayload"
            - $ref: "#/components/schemas/errorPayload"
    GetGroupMessages:
      name: getGroupMessages
      summary: Get past messages in a group. Use timestampKey and limit for pagination.
      contentType: application/json
      payload:
        type: object
        description: Get messages for a group conversation
        required:
          - groupUid
          - timestampKey
          - limit
        properties:
          groupUid:
            type: string
            format: uuid
          timestampKey:
            type: string
            format: date-time
          limit:
            type: number
            format: integer
            minimum: 1
      x-ack:
        args:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/groupMessagePayload"
              - $ref: "#/components/schemas/errorPayload"
    GetDmMessages:
      name: getDmMessages
      summary: Get past messages in a dm. Use timestampKey and limit for pagination.
      contentType: application/json
      payload:
        type: object
        description: Get messages for a dm conversation
        required:
          - dmAccountUid
          - timestampKey
          - limit
        properties:
          dmAccountUid:
            type: string
            format: uuid
          timestampKey:
            type: string
            format: date-time
          limit:
            type: number
            format: integer
            minimum: 1
      x-ack:
        args:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/dmMessagePayload"
              - $ref: "#/components/schemas/errorPayload"
    CreateGroup:
      name: createGroup
      summary: Create a new group. Automatically added to active conversations.
      contentType: application/json
      payload:
        type: object
        required:
          - accounts
        properties:
          accounts:
            description: other accounts to add to group dm. Logged-in account is automatically added.
            type: array
            items:
              type: string
              format: uuid
      x-ack:
        args:
          oneOf:
            - $ref: "#/components/schemas/group"
            - $ref: "#/components/schemas/errorPayload"
    LeaveGroup:
      name: leaveGroup
      summary: Leave a group. Account will no longer be a part of the group and will not be able to send or receive messages in the group.
      contentType: application/json
      payload:
        type: object
        required:
          - groupUid
        properties:
          groupUid:
            type: string
            format: uuid
      x-ack:
        args:
          oneOf:
            - $ref: "#/components/schemas/group"
            - $ref: "#/components/schemas/errorPayload"
    DeactivateConversation:
      name: deactivateConversation
      summary: Deactivate a conversation for an account. No longer appears in their active conversations. Any messages sent in a conversation will automatically reactivate the conversation for all participants. Accepts either he groupUid or accountUid of dm account.
      contentType: application/json
      payload:
        oneOf:
          - type: object
            required:
              - groupUid
            properties:
              groupUid:
                type: string
                format: uuid
          - type: object
            required:
              - dmAccountUid
            properties:
              dmAccountUid:
                type: string
                format: uuid
      x-ack:
        args:
          oneOf:
            - $ref: "#/components/schemas/group"
            - $ref: "#/components/schemas/dmAccount"
            - $ref: "#/components/schemas/errorPayload"
    GetConversations:
      name: getConversations
      summary: Get all current conversations of signed in account
      contentType: application/json
      x-ack:
        args:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/group"
              - $ref: "#/components/schemas/dmAccount"
    ReceiveMessage:
      name: receiveUserMessage
      contentType: application/json
      payload:
        oneOf:
          - $ref: "#/components/schemas/groupMessagePayload"
          - $ref: "#/components/schemas/dmMessagePayload"
  schemas:
    groupMessagePayload:
      type: object
      required:
        - messageUid
        - groupUid
        - content
        - timestamp
      properties:
        messageUid:
          readOnly: true
          type: string
          format: uuid
        groupUid:
          type: string
          format: uuid
        content:
          $ref: "#/components/schemas/messageContent"
        timestamp:
          readOnly: true
          type: string
          format: date-time
    dmMessagePayload:
      type: object
      required:
        - messageUid
        - dmAccountUid
        - content
        - timestamp
      properties:
        messageUid:
          readOnly: true
          type: string
          format: uuid
        dmAccountUid:
          type: string
          format: uuid
        content:
          $ref: "#/components/schemas/messageContent"
        timestamp:
          readOnly: true
          type: string
          format: date-time
    group:
      type: object
      required:
        - groupUid
        - groupName
        - accounts
        - lastMessage
      properties:
        groupUid:
          type: string
          format: uuid
        groupName:
          type: string
          maxLength: 100
        accounts:
          type: array
          items:
            type: string
            format: uuid
        lastMessage:
          readOnly: true
          $ref: "#/components/schemas/groupMessagePayload"
    dmAccount:
      type: object
      required:
        - dmAccountUid
        - lastMessage
      properties:
        dmAccountUid:
          type: string
          format: uuid
        lastMessage:
          readOnly: true
          $ref: "#/components/schemas/dmMessagePayload"
    messageContent:
      type: string
      maxLength: 300
    errorPayload:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - event
              - message
              - detail
            properties:
              code:
                type: string
              event:
                type: string
              message:
                type: string
              detail:
                type: string
