import { pool } from "../configServices/dbConfig.js";
import camelize from "camelize";
import { bucket } from "../configServices/cloudStorageConfig.js";
import snakeize from "snakeize";
import { BusinessError, accountNotFound } from "../utils/errors.js";
import stripNulls from "../utils/stripNulls.js";
// import parseInputMessage from "../socketParsers/inputMessageParser.js";
// import socketInternalError from "../socketParsers/socketInternalError.js";
import Ajv from "ajv";
import { validateDmMessageInput } from "../socketValidation/socketValidators.js";
const ajv = new Ajv({ allErrors: true, jsonPointers: true });
export default (io, socket) => {
  const sendMessage = async (message, callback) => {
    const errors = validateDmMessageInput(message, "sendDmMessage");
    if (errors) {
      callback(errors);
      return;
    }

    //valid input message
    //add senderUid and timestamp (messageUid is generated by db)
    //save message to db
    //send message to dmAccountUid

    // message.messageUid = "test32e6-c4f8-44d4-9408-cfb4f8499d01";
    // message.senderUid = socket.accountUid;
    // message.timestamp = Date.now();
    // io.to(message.receiverUid).emit("receiveMessage", message);
    // callback(message);
    return;
  };

  const deleteMessage = (messageId) => {
    //delete message in db?
    socket.emit("deleteMessage", messageId);
  };
  socket.on("sendDmMessage", sendMessage);
  socket.on("deleteMessage", deleteMessage);
};
